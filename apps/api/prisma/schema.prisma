 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @unique
  clientId    String?   @unique @default(uuid())
  email       String    @unique
  username    String    @unique
  active      Boolean   @default(false)
  role        USER_ROLE @default(USER)
  conversations Conversation[]
  files       File[]
  auth_session Session[]
  key          Key[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastLogin  DateTime?
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model RevokedToken {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Conversation {
  id         String   @id @default(uuid())
  name       String
  email      String
  phone      String?
  userId     String
  user       User @relation(fields: [userId], references: [id])
  messages   Message[]
  createdAt  DateTime @default(now())
  lastActive DateTime @default(now())
}
 model Message {
  id             Int          @id @default(autoincrement())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  content        String
  contentType    CONTENT_TYPE @default(TEXT)
  type           MESSAGE_TYPE
  seen           Boolean      @default(false)
  file           File?
  createdAt      DateTime     @default(now())
 }

model File {
  id             Int          @id @default(autoincrement())
  key            String
  name           String
  location       String
  mimeType       String
  size           Int
  clientId       String
  client         User         @relation(fields: [clientId], references: [id])
  messageId      Int?         @unique
  message        Message?     @relation(fields: [messageId], references: [id])
  createdAt      DateTime     @default(now())
}

enum USER_ROLE {
  ADMIN
  USER
}
enum MESSAGE_TYPE {
  INBOUND
  OUTBOUND
}
enum CONTENT_TYPE {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  FILE
}